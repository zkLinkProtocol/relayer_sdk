"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PolygonRegistryMock__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "erc20Predicate",
        outputs: [
            {
                internalType: "address",
                name: "predicate",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60808060405234601457609190816100198239f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c63b6864976146023575f80fd5b346057575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112605757805f60209252f35b5f80fdfea2646970667358221220ec43593a676383dabcda804eae7e93343051606638e85dc062cdb907f0e0fe2f64736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class PolygonRegistryMock__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.PolygonRegistryMock__factory = PolygonRegistryMock__factory;
PolygonRegistryMock__factory.bytecode = _bytecode;
PolygonRegistryMock__factory.abi = _abi;
