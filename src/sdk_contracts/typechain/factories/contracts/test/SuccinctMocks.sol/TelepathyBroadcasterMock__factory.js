"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TelepathyBroadcasterMock__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint16",
                name: "",
                type: "uint16",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        name: "send",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x608080604052346100155760ed908161001a8239f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c63b1d995dd146023575f80fd5b3460b35760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011260b35760043561ffff81160360b35760243573ffffffffffffffffffffffffffffffffffffffff81160360b35760443567ffffffffffffffff80821160b3573660238301121560b357816004013590811160b3573691016024011160b357805f60209252f35b5f80fdfea26469706673582212200204a226565eff7b829cd6132352a93463db60e58026171ae50f42003630afb964736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class TelepathyBroadcasterMock__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TelepathyBroadcasterMock__factory = TelepathyBroadcasterMock__factory;
TelepathyBroadcasterMock__factory.bytecode = _bytecode;
TelepathyBroadcasterMock__factory.abi = _abi;
