"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OptimisticOracleConstraints__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "ancillaryBytesLimit",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60808060405234601857608f908161001d823930815050f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c63c371dda7146023575f80fd5b5f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126055578061200060209252f35b5f80fdfea264697066735822122077f8468f1c9ca07a2dcf0d9344bbf2ae0c9b4ddfcb818b95b54dc660dde58e0864736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class OptimisticOracleConstraints__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.OptimisticOracleConstraints__factory = OptimisticOracleConstraints__factory;
OptimisticOracleConstraints__factory.bytecode = _bytecode;
OptimisticOracleConstraints__factory.abi = _abi;
