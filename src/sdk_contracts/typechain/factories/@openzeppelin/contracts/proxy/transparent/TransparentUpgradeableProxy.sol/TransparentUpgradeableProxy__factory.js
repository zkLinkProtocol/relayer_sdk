"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransparentUpgradeableProxy__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_logic",
                type: "address",
            },
            {
                internalType: "address",
                name: "admin_",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "_data",
                type: "bytes",
            },
        ],
        stateMutability: "payable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "previousAdmin",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "newAdmin",
                type: "address",
            },
        ],
        name: "AdminChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "beacon",
                type: "address",
            },
        ],
        name: "BeaconUpgraded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "implementation",
                type: "address",
            },
        ],
        name: "Upgraded",
        type: "event",
    },
    {
        stateMutability: "payable",
        type: "fallback",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
];
const _bytecode = "0x60406080815262000f93803803806200001881620002f8565b9283398101606082820312620002f45762000033826200031e565b91602092620000448483016200031e565b928583015160018060401b0393848211620002f457019281601f85011215620002f4578351936200007f620000798662000333565b620002f8565b9480865287860193888284010111620002f4578388620000a093016200034f565b823b156200029a577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b038581166001600160a01b0319928316811790935590959094917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a280511580159062000292575b620001e9575b505050507fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103937f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f86865493815196818616885216958684820152a183156200019757501617905551610b6790816200042c8239f35b60849086519062461bcd60e51b82526004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b88519260608401908111848210176200027e578952602783527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c88840152660819985a5b195960ca1b838a0152516200026a935f918291845af43d1562000275573d916200025b620000798462000333565b9283523d5f8a85013e62000372565b505f80808062000122565b60609162000372565b634e487b7160e01b5f52604160045260245ffd5b505f6200011c565b865162461bcd60e51b815260048101879052602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b5f80fd5b6040519190601f01601f191682016001600160401b038111838210176200027e57604052565b51906001600160a01b0382168203620002f457565b6001600160401b0381116200027e57601f01601f191660200190565b5f5b838110620003615750505f910152565b818101518382015260200162000351565b91929015620003d7575081511562000388575090565b3b15620003925790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015620003eb5750805190602001fd5b6044604051809262461bcd60e51b8252602060048301526200041d81518092816024860152602086860191016200034f565b601f01601f19168101030190fdfe608060405236610216577fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163303610211575f357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe60000000000000000000000000000000000000000000000000000000081036100a3575061009b61072a565b602081519101f35b7f4f1ef2860000000000000000000000000000000000000000000000000000000081036100d857506100d361066f565b61009b565b7f8f28397000000000000000000000000000000000000000000000000000000000810361010857506100d3610532565b7ff851a44000000000000000000000000000000000000000000000000000000000810361013857506100d361041c565b7f5c60da1b0000000000000000000000000000000000000000000000000000000003610166576100d36103c3565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a490fd5b6102a8565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff1633036102a8575f357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe60000000000000000000000000000000000000000000000000000000081036100a3575061009b61072a565b5f8073ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416368280378136915af43d5f803e156102f8573d5ff35b3d5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040810190811067ffffffffffffffff82111761034557604052565b6102fc565b6020810190811067ffffffffffffffff82111761034557604052565b6060810190811067ffffffffffffffff82111761034557604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761034557604052565b6103cb6108a7565b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166040519060208201526020815261041981610329565b90565b6104246108a7565b73ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610354166040519060208201526020815261041981610329565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361049557565b5f80fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60209101126104955760043573ffffffffffffffffffffffffffffffffffffffff811681036104955790565b67ffffffffffffffff811161034557601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6040519061052d8261034a565b5f8252565b61053a6108a7565b366004116104955773ffffffffffffffffffffffffffffffffffffffff8061056136610499565b167fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103917f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604084549281519084168152846020820152a181156105eb577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055610419610520565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b366004116104955760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610495576106a9610472565b6024359067ffffffffffffffff82116104955736602383011215610495578160040135916106d6836104e6565b916106e46040519384610382565b8383523660248584010111610495575f60208561072296602473ffffffffffffffffffffffffffffffffffffffff96018388013785010152166108ae565b610419610520565b6107326108a7565b366004116104955773ffffffffffffffffffffffffffffffffffffffff61075836610499565b16604051906107668261034a565b5f8252803b15610823577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a281511580159061081c575b610802575b50506040516107fc8161034a565b5f815290565b6108149161080e610963565b916109c2565b505f806107ee565b505f6107e9565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b3461049557565b803b156108235773ffffffffffffffffffffffffffffffffffffffff81167f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a281511580159061095b575b61094c575050565b6109589161080e610963565b50565b506001610944565b6040519061097082610366565b602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b5f806104199493602081519101845af43d156109ff573d916109e3836104e6565b926109f16040519485610382565b83523d5f602085013e610a6c565b606091610a6c565b15610a0e57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b91929015610a8c5750815115610a80575090565b610419903b1515610a07565b825190915015610a9f5750805190602001fd5b604051907f08c379a00000000000000000000000000000000000000000000000000000000082528160208060048301528251928360248401525f5b848110610b1a575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f835f604480968601015201168101030190fd5b818101830151868201604401528593508201610ada56fea2646970667358221220fce7a9f7e16f422056ede86429fac0f345c75c45097c77d7ddd7189c1f820c7d64736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class TransparentUpgradeableProxy__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_logic, admin_, _data, overrides) {
        return super.deploy(_logic, admin_, _data, overrides || {});
    }
    getDeployTransaction(_logic, admin_, _data, overrides) {
        return super.getDeployTransaction(_logic, admin_, _data, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TransparentUpgradeableProxy__factory = TransparentUpgradeableProxy__factory;
TransparentUpgradeableProxy__factory.bytecode = _bytecode;
TransparentUpgradeableProxy__factory.abi = _abi;
